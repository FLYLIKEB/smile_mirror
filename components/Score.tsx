import React from 'react';

interface ScoreProps {
  score: number;
}

const Score: React.FC<ScoreProps> = ({ score }) => {
  // Í∞êÏ†ï ÏÉÅÌÉúÏóê Îî∞Î•∏ ÎØ∏Îü¨ ÏÉÅÌÉú Í≤∞Ï†ï (ÏõÉÏùåÏóê Îçî Ïö∞Ìò∏Ï†Å)
  const getMirrorStatus = (emotionScore: number) => {
    if (emotionScore < -20) {
      return {
        status: 'üòî Í¥úÏ∞ÆÏïÑÏöî',
        color: 'text-gray-400',
        bgColor: 'bg-gray-800',
        message: 'Ï≤úÏ≤úÌûà ÎØ∏ÏÜåÏßÄÏñ¥ Î≥¥ÏÑ∏Ïöî'
      };
    } else if (emotionScore >= -20 && emotionScore < 10) {
      return {
        status: 'üîÑ Ï°∞Ï†ï Ï§ë',
        color: 'text-red-500',
        bgColor: 'bg-red-900',
        message: 'Îçî Î∞ùÍ≤å ÏõÉÏñ¥Î≥¥ÏÑ∏Ïöî'
      };
    } else if (emotionScore < 40) {
      return {
        status: '‚ö†Ô∏è Î∂ÑÏÑù Ï§ë',
        color: 'text-yellow-500',
        bgColor: 'bg-yellow-900',
        message: 'ÌëúÏ†ï ÏÉÅÌÉú ÌôïÏù∏ Ï§ë'
      };
    } else {
      return {
        status: '‚ú® ÏôÑÎ≤ΩÌï¥Ïöî',
        color: 'text-green-500',
        bgColor: 'bg-green-900',
        message: 'ÏïÑÎ¶ÑÎã§Ïö¥ ÎØ∏ÏÜåÏûÖÎãàÎã§'
      };
    }
  };

  const mirrorInfo = getMirrorStatus(score);
  const formattedScore = `${score.toFixed(1)}%`;
  
  return (
    <div className={`fixed top-0 left-4 m-4 px-4 py-3 ${mirrorInfo.bgColor} bg-opacity-80 backdrop-blur rounded-lg shadow-lg z-50 border border-white border-opacity-20`}>
      <div className="flex flex-col items-center space-y-1">
        <div className={`text-lg font-bold ${mirrorInfo.color}`}>
          {mirrorInfo.status}
        </div>
        <div className="text-white text-sm opacity-90">
          Í∞êÏ†ï Ï†êÏàò: {formattedScore}
        </div>
        <div className="text-white text-xs opacity-70 text-center">
          {mirrorInfo.message}
        </div>
      </div>
    </div>
  );
};

export default Score; 